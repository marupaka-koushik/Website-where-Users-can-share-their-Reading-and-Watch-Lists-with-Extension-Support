{"ast":null,"code":"import React from'react';import{Navigate,useParams}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{user,isAuthenticated,loading}=useAuth();const{username}=useParams();// Show loading while checking authentication\nif(loading){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'50vh',color:'#666'},children:\"Loading...\"});}// Redirect to login if not authenticated\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Check if the username in URL matches the logged-in user\nif(username&&(user===null||user===void 0?void 0:user.username)!==username){// If they're trying to access someone else's page, redirect to their own\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/u/\".concat(user.username),replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useParams","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","user","isAuthenticated","loading","username","style","display","justifyContent","alignItems","height","color","to","replace","concat"],"sources":["/Users/koushikmarupaka/Desktop/summarise/website/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children }) => {\n  const { user, isAuthenticated, loading } = useAuth();\n  const { username } = useParams();\n\n  // Show loading while checking authentication\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '50vh',\n        color: '#666'\n      }}>\n        Loading...\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Check if the username in URL matches the logged-in user\n  if (username && user?.username !== username) {\n    // If they're trying to access someone else's page, redirect to their own\n    return <Navigate to={`/u/${user.username}`} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,kBAAkB,CACtD,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,IAAI,CAAEC,eAAe,CAAEC,OAAQ,CAAC,CAAGR,OAAO,CAAC,CAAC,CACpD,KAAM,CAAES,QAAS,CAAC,CAAGV,SAAS,CAAC,CAAC,CAEhC;AACA,GAAIS,OAAO,CAAE,CACX,mBACEN,IAAA,QAAKQ,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,MACT,CAAE,CAAAV,QAAA,CAAC,YAEH,CAAK,CAAC,CAEV,CAEA;AACA,GAAI,CAACE,eAAe,CAAE,CACpB,mBAAOL,IAAA,CAACJ,QAAQ,EAACkB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,GAAIR,QAAQ,EAAI,CAAAH,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAAE,CAC3C;AACA,mBAAOP,IAAA,CAACJ,QAAQ,EAACkB,EAAE,OAAAE,MAAA,CAAQZ,IAAI,CAACG,QAAQ,CAAG,CAACQ,OAAO,MAAE,CAAC,CACxD,CAEA,MAAO,CAAAZ,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
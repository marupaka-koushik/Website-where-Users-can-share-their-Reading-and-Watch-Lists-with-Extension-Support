{"ast":null,"code":"var _jsxFileName = \"/Users/koushikmarupaka/Desktop/summarise/website/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await axios.get(`${API_URL}/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${storedToken}`\n            }\n          });\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          // Remove invalid token\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n        }\n      } else {\n        setUser(null);\n        setToken(null);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [API_URL]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n\n      // Return user data with the response\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n\n      // Return user data with the response\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"fIIaSAstNkYSE374vJg2G3X3Tfc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","sessionStorage","getItem","API_URL","process","env","REACT_APP_API_URL","defaults","headers","common","checkAuth","storedToken","localStorage","response","get","Authorization","data","error","console","removeItem","login","email","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koushikmarupaka/Desktop/summarise/website/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await axios.get(`${API_URL}/auth/me`, {\n            headers: { Authorization: `Bearer ${storedToken}` }\n          });\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          // Remove invalid token\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n        }\n      } else {\n        setUser(null);\n        setToken(null);\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [API_URL]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n\n      const { token: newToken, user: userData } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      \n      // Return user data with the response\n      return { success: true, user: userData };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      \n      const { token: newToken, user: newUser } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      \n      // Return user data with the response\n      return { success: true, user: newUser };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
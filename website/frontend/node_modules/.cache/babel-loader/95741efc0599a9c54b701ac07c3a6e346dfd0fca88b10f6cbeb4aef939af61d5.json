{"ast":null,"code":"var _jsxFileName = \"/Users/koushikmarupaka/Desktop/summarise/website/frontend/src/pages/NotificationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bell, User as UserIcon, Check } from 'lucide-react';\nimport './NotificationsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationsPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const token = sessionStorage.getItem('token');\n      const response = await fetch('/api/users/me/notifications?limit=50', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setNotifications(data.notifications || []);\n        setUnreadCount(data.unreadCount || 0);\n      } else {\n        console.error('Failed to fetch notifications');\n      }\n    } catch (error) {\n      console.error('Failed to fetch notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      const token = sessionStorage.getItem('token');\n      await fetch(`/api/users/me/notifications/${notificationId}/read`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Update local state\n      setNotifications(prev => prev.map(notification => notification._id === notificationId ? {\n        ...notification,\n        isRead: true,\n        readAt: new Date()\n      } : notification));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n\n      // Trigger navigation refresh for notification count\n      window.dispatchEvent(new CustomEvent('notificationRead'));\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      const token = sessionStorage.getItem('token');\n      await fetch('/api/users/me/notifications/read-all', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Update local state\n      setNotifications(prev => prev.map(notification => ({\n        ...notification,\n        isRead: true,\n        readAt: new Date()\n      })));\n      setUnreadCount(0);\n\n      // Trigger navigation refresh for notification count\n      window.dispatchEvent(new CustomEvent('notificationRead'));\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n    }\n  };\n  const handleNotificationClick = async notification => {\n    // Mark as read if not already read\n    if (!notification.isRead) {\n      await markAsRead(notification._id);\n    }\n\n    // Navigate to the sender's profile\n    if (notification.sender && notification.sender.username) {\n      navigate(`/user/${notification.sender.username}`);\n    }\n  };\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return date.toLocaleDateString();\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'follow_accepted':\n        return /*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"notification-icon-follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Bell, {\n          size: 20,\n          className: \"notification-icon-default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading notifications...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unread-count\",\n          children: [unreadCount, \" unread\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: markAllAsRead,\n        className: \"mark-all-read-btn\",\n        children: \"Mark All Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(Bell, {\n          size: 48,\n          className: \"empty-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"When someone accepts your follow request, you'll see it here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : notifications.map(notification => {\n        var _notification$sender, _notification$sender2, _notification$sender3, _notification$sender4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.isRead ? 'unread' : ''}`,\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-avatar\",\n            children: (_notification$sender = notification.sender) !== null && _notification$sender !== void 0 && _notification$sender.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: notification.sender.avatar,\n              alt: `${notification.sender.username}'s avatar`,\n              className: \"avatar-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(UserIcon, {\n              size: 24,\n              className: \"avatar-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-main\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sender-name\",\n                  children: ((_notification$sender2 = notification.sender) === null || _notification$sender2 === void 0 ? void 0 : _notification$sender2.fullName) || ((_notification$sender3 = notification.sender) === null || _notification$sender3 === void 0 ? void 0 : _notification$sender3.username)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-message\",\n                  children: notification.type === 'follow_accepted' ? ' accepted your follow request' : ` ${notification.message.replace(((_notification$sender4 = notification.sender) === null || _notification$sender4 === void 0 ? void 0 : _notification$sender4.username) || '', '').trim()}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-time\",\n                children: formatTime(notification.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-type-icon\",\n                children: getNotificationIcon(notification.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"unread-indicator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationsPage, \"b4AXcZx2oUgWX4L+dApXyGqDiUc=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationsPage;\nexport default NotificationsPage;\nvar _c;\n$RefreshReg$(_c, \"NotificationsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Bell","User","UserIcon","Check","jsxDEV","_jsxDEV","NotificationsPage","_s","notifications","setNotifications","loading","setLoading","unreadCount","setUnreadCount","navigate","fetchNotifications","token","sessionStorage","getItem","response","fetch","headers","ok","data","json","console","error","markAsRead","notificationId","method","prev","map","notification","_id","isRead","readAt","Date","Math","max","window","dispatchEvent","CustomEvent","markAllAsRead","handleNotificationClick","sender","username","formatTime","dateString","date","now","diffMs","diffMinutes","floor","diffHours","diffDays","toLocaleDateString","getNotificationIcon","type","size","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","length","_notification$sender","_notification$sender2","_notification$sender3","_notification$sender4","avatar","src","alt","fullName","message","replace","trim","createdAt","_c","$RefreshReg$"],"sources":["/Users/koushikmarupaka/Desktop/summarise/website/frontend/src/pages/NotificationsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bell, User as UserIcon, Check } from 'lucide-react';\nimport './NotificationsPage.css';\n\nconst NotificationsPage = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      const token = sessionStorage.getItem('token');\n      const response = await fetch('/api/users/me/notifications?limit=50', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setNotifications(data.notifications || []);\n        setUnreadCount(data.unreadCount || 0);\n      } else {\n        console.error('Failed to fetch notifications');\n      }\n    } catch (error) {\n      console.error('Failed to fetch notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const markAsRead = async (notificationId) => {\n    try {\n      const token = sessionStorage.getItem('token');\n      await fetch(`/api/users/me/notifications/${notificationId}/read`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Update local state\n      setNotifications(prev => \n        prev.map(notification => \n          notification._id === notificationId \n            ? { ...notification, isRead: true, readAt: new Date() }\n            : notification\n        )\n      );\n      \n      setUnreadCount(prev => Math.max(0, prev - 1));\n      \n      // Trigger navigation refresh for notification count\n      window.dispatchEvent(new CustomEvent('notificationRead'));\n      \n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      const token = sessionStorage.getItem('token');\n      await fetch('/api/users/me/notifications/read-all', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Update local state\n      setNotifications(prev => \n        prev.map(notification => ({ \n          ...notification, \n          isRead: true, \n          readAt: new Date() \n        }))\n      );\n      \n      setUnreadCount(0);\n      \n      // Trigger navigation refresh for notification count\n      window.dispatchEvent(new CustomEvent('notificationRead'));\n      \n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n    }\n  };\n\n  const handleNotificationClick = async (notification) => {\n    // Mark as read if not already read\n    if (!notification.isRead) {\n      await markAsRead(notification._id);\n    }\n\n    // Navigate to the sender's profile\n    if (notification.sender && notification.sender.username) {\n      navigate(`/user/${notification.sender.username}`);\n    }\n  };\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return date.toLocaleDateString();\n  };\n\n  const getNotificationIcon = (type) => {\n    switch (type) {\n      case 'follow_accepted':\n        return <Check size={20} className=\"notification-icon-follow\" />;\n      default:\n        return <Bell size={20} className=\"notification-icon-default\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"notifications-page\">\n        <div className=\"page-header\">\n          <h1>Notifications</h1>\n        </div>\n        <div className=\"loading\">Loading notifications...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"notifications-page\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Notifications</h1>\n          {unreadCount > 0 && (\n            <span className=\"unread-count\">{unreadCount} unread</span>\n          )}\n        </div>\n        {unreadCount > 0 && (\n          <button \n            onClick={markAllAsRead}\n            className=\"mark-all-read-btn\"\n          >\n            Mark All Read\n          </button>\n        )}\n      </div>\n\n      <div className=\"notifications-list\">\n        {notifications.length === 0 ? (\n          <div className=\"empty-state\">\n            <Bell size={48} className=\"empty-icon\" />\n            <h3>No notifications</h3>\n            <p>When someone accepts your follow request, you'll see it here.</p>\n          </div>\n        ) : (\n          notifications.map((notification) => (\n            <div\n              key={notification._id}\n              className={`notification-item ${!notification.isRead ? 'unread' : ''}`}\n              onClick={() => handleNotificationClick(notification)}\n            >\n              <div className=\"notification-avatar\">\n                {notification.sender?.avatar ? (\n                  <img \n                    src={notification.sender.avatar} \n                    alt={`${notification.sender.username}'s avatar`}\n                    className=\"avatar-img\"\n                  />\n                ) : (\n                  <UserIcon size={24} className=\"avatar-icon\" />\n                )}\n              </div>\n              \n              <div className=\"notification-content\">\n                <div className=\"notification-main\">\n                  <div className=\"notification-text\">\n                    <span className=\"sender-name\">\n                      {notification.sender?.fullName || notification.sender?.username}\n                    </span>\n                    <span className=\"notification-message\">\n                      {notification.type === 'follow_accepted' \n                        ? ' accepted your follow request'\n                        : ` ${notification.message.replace(notification.sender?.username || '', '').trim()}`\n                      }\n                    </span>\n                  </div>\n                  <div className=\"notification-time\">\n                    {formatTime(notification.createdAt)}\n                  </div>\n                </div>\n                \n                <div className=\"notification-meta\">\n                  <div className=\"notification-type-icon\">\n                    {getNotificationIcon(notification.type)}\n                  </div>\n                  {!notification.isRead && (\n                    <div className=\"unread-indicator\" />\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}